{"ast":null,"code":"import { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createGen = configure(api => {\n  /**\n   * @type {KeyAPI[\"gen\"]}\n   */\n  async function gen(name, options = {\n    type: 'Ed25519'\n  }) {\n    const res = await api.post('key/gen', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json(); // @ts-expect-error server output is not typed\n\n    return objectToCamel(data);\n  }\n\n  return gen;\n});","map":{"version":3,"sources":["/Users/madukadu/Github/Study abroad/studyabroad/study/node_modules/ipfs-http-client/src/key/gen.js"],"names":["objectToCamel","configure","toUrlSearchParams","createGen","api","gen","name","options","type","res","post","signal","searchParams","arg","headers","data","json"],"mappings":"AAAA,SAASA,aAAT,QAA8B,2BAA9B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAACG,GAAG,IAAI;AACxC;AACF;AACA;AACE,iBAAeC,GAAf,CAAoBC,IAApB,EAA0BC,OAAO,GAAG;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAApC,EAAyD;AACvD,UAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,SAAT,EAAoB;AACpCC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MADoB;AAEpCC,MAAAA,YAAY,EAAEV,iBAAiB,CAAC;AAC9BW,QAAAA,GAAG,EAAEP,IADyB;AAE9B,WAAGC;AAF2B,OAAD,CAFK;AAMpCO,MAAAA,OAAO,EAAEP,OAAO,CAACO;AANmB,KAApB,CAAlB;AAQA,UAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAnB,CATuD,CAWvD;;AACA,WAAOhB,aAAa,CAACe,IAAD,CAApB;AACD;;AACD,SAAOV,GAAP;AACD,CAnBiC,CAA3B","sourcesContent":["import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createGen = configure(api => {\n  /**\n   * @type {KeyAPI[\"gen\"]}\n   */\n  async function gen (name, options = { type: 'Ed25519' }) {\n    const res = await api.post('key/gen', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data)\n  }\n  return gen\n})\n"]},"metadata":{},"sourceType":"module"}