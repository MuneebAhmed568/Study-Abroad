{"ast":null,"code":"import config from '@/../config';\nimport { create } from 'ipfs-http-client';\nimport { Buffer } from 'buffer';\nexport default {\n  props: ['emails'],\n\n  data() {\n    return {\n      token: \"\",\n      projectId: '2DBOP6lMpJJXMfPYTHHbUprAtAA',\n      projectSecret: 'c47db02a18967d4b6b1758b83a53ffb8',\n      file: \"\",\n      Ipfs_path: \"\",\n      img_array: []\n    };\n  },\n\n  methods: {\n    async getId() {\n      this.ImageID = document.getElementById('imgid').value;\n\n      if (this.ImageID > 0 || this.ImageID != \"\" || this.ImageID < 102) {\n        await this.axios.get(config.json_Api + 'ads/' + this.ImageID + '').then(async response => {\n          console.log(response.data);\n          this.img_array = response.data;\n        });\n      }\n    },\n\n    async convert() {\n      await this.uploadToIpfs(this.file); // console.log(va)\n    },\n\n    onFilePicked(event) {\n      this.file = event.target.files[0];\n    },\n\n    async uploadToIpfs(file) {\n      const auth = 'Basic ' + Buffer.from(this.projectId + ':' + this.projectSecret).toString('base64');\n      const client = await create({\n        host: 'ipfs.infura.io',\n        port: 5001,\n        protocol: 'https',\n        headers: {\n          authorization: auth\n        }\n      });\n      const added = await client.add(file);\n      const url = `https://abroadstudy.infura-ipfs.io/ipfs/${added.path}`;\n      this.Ipfs_path = url;\n      return url;\n    },\n\n    addads() {\n      this.ImageID = document.getElementById('imgid').value;\n      this.Image1 = document.getElementById('img1').value;\n      this.Image2 = document.getElementById('img2').value;\n      this.Image3 = document.getElementById('img3').value;\n      this.axios.patch(config.json_Api + `ads/${this.ImageID}`, {\n        img1: this.Image1,\n        img2: this.Image2,\n        img3: this.Image3\n      }).then(response => {\n        //Alert for Change Pass Verification\n        response;\n        alert(\"Add Succesfully!\");\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["config","create","Buffer","props","data","token","projectId","projectSecret","file","Ipfs_path","img_array","methods","getId","ImageID","document","getElementById","value","axios","get","json_Api","then","response","console","log","convert","uploadToIpfs","onFilePicked","event","target","files","auth","from","toString","client","host","port","protocol","headers","authorization","added","add","url","path","addads","Image1","Image2","Image3","patch","img1","img2","img3","alert"],"sourceRoot":"","sources":["/Users/madukadu/Github/Study Abroad Public Access/Study-Abroad/study/src/components/AddsManagement.vue"],"sourcesContent":["<template> \n    <div class=\"main-card mb-3 card\">\n        <div class=\"card-body\">\n        <h3><b>Add Ads</b></h3>\n        <div class=\"position-relative row form-group mt-2\"><label for=\"exampleFile\" class=\"col-sm-2 col-form-label\" style=\"color:black\">Upload your picture:</label>\n                        <img src=\"assets/images/avatars/4.jpg\" height=\"100px\" width=\"100px\"/>\n                        <div class=\"col-sm-4\"><input id=\"upload-pic\" name=\"file\" ref=\"fileInput\" accept=\"image/*\" @change=\"onFilePicked($event)\" type=\"file\" class=\"form-control-file\" required>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <h5>image path:</h5>\n                            {{this.Ipfs_path}}\n                        </div>\n                        <div class=\"col-sm-4 offset-sm-5\">\n        <button v-on:click.prevent=\"convert()\" class=\"btn btn-secondary\">Covert Image</button>\n        </div>\n                    </div>\n        <form class=\"mt-4\">\n            <div class=\"position-relative row form-group\"><label for=\"exampleEmail\" class=\"col-sm-2 col-form-label\">ID</label>\n        <div class=\"col-sm-10\"><input name=\"id\" id=\"imgid\" placeholder=\" base64enter\" type=\"text\" class=\"form-control\"></div>\n        </div>\n        <div class=\"col-sm-7 offset-sm-5\">\n        <button v-on:click.prevent=\"getId()\" class=\"btn btn-secondary\">Fetch Id Data</button>\n        </div>\n        <div class=\"col-sm-10 offset-sm-2\" ><p>{{this.img_array}}</p></div>\n        <div class=\"position-relative row form-group\"><label for=\"exampleEmail\" class=\"col-sm-2 col-form-label\">IMAGE 1</label>\n        <div class=\"col-sm-10\"><input name=\"img1\" id=\"img1\" placeholder=\" base64enter\" type=\"text\" class=\"form-control\"></div>\n        </div>\n        <div class=\"position-relative row form-group\"><label for=\"examplePassword\" class=\"col-sm-2 col-form-label\">IMAGE 2</label>\n        <div class=\"col-sm-10\"><input name=\"img2\" id=\"img2\" placeholder=\"base64enter\" type=\"text\" class=\"form-control\"></div>\n        </div>\n        <div class=\"position-relative row form-group\"><label for=\"examplePassword\" class=\"col-sm-2 col-form-label\">IMAGE 3</label>\n        <div class=\"col-sm-10\"><input name=\"img3\" id=\"img3\" placeholder=\"base64enter\" type=\"text\" class=\"form-control\"></div>\n        </div>\n        <div class=\"position-relative row form-check mt-3\">\n        <div class=\"col-sm-7 offset-sm-5\">\n        <button v-on:click.prevent=\"addads()\" class=\"btn btn-secondary\">Submit</button>\n        </div>\n        </div>\n        </form>\n        </div>\n    </div>\n</template>\n<script>\nimport config from '@/../config'\nimport { create } from 'ipfs-http-client';\nimport { Buffer } from 'buffer';\nexport default {\n    props: ['emails'],\n    data () {\n        return {\n            token:\"\",\n            projectId: '2DBOP6lMpJJXMfPYTHHbUprAtAA',\n            projectSecret : 'c47db02a18967d4b6b1758b83a53ffb8',\n            file:\"\",\n            Ipfs_path:\"\",\n            img_array:[],\n        }\n    },\n    methods: {\n        async getId(){\n            this.ImageID = document.getElementById('imgid').value\n            if(this.ImageID >0 || this.ImageID != \"\" || this.ImageID <102){\n                await this.axios.get(config.json_Api+'ads/'+this.ImageID+'')\n\t\t.then(async (response) => {\n            console.log(response.data)\n            this.img_array = response.data\n\t\t\t})\n            }\n            \n        },\n        async convert(){\n            await this.uploadToIpfs(this.file )\n            // console.log(va)\n        },\n        onFilePicked (event) {\n        this.file = event.target.files[0]\n        },\n        async uploadToIpfs(file){\n        \n        const auth ='Basic ' + Buffer.from(this.projectId + ':' + this.projectSecret).toString('base64')\n\n        const client = await create({\n            host: 'ipfs.infura.io',\n            port: 5001,\n            protocol: 'https',\n            headers: {\n            authorization: auth\n            }\n        })\n        const added = await client.add(file)\n        const url = `https://abroadstudy.infura-ipfs.io/ipfs/${added.path}`\n        this.Ipfs_path = url\n        return url\n    }, \n        addads () {\n            this.ImageID = document.getElementById('imgid').value\n            this.Image1 = document.getElementById('img1').value\n            this.Image2 = document.getElementById('img2').value\n            this.Image3 = document.getElementById('img3').value\n            this.axios.patch(config.json_Api+`ads/${this.ImageID}`,{\n                img1:this.Image1,\n                img2: this.Image2,\n                img3: this.Image3\n            })\n              .then((response) => {\n                //Alert for Change Pass Verification\n                response\n                alert(\"Add Succesfully!\")\n                 })\n        }\n        \n    }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}